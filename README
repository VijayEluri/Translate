command line utility for  languages services.


usage:

after a build is done (manually doing a jar of the builded sources and adding it and all on lib dir on classpath) an example of execution
is the following:

>java -jar cltranslatorSNAPSHOT.jar -dic=gApi --languages
[to list supported languages of the dictionary mapped as gApi]

>java -jar cltranslatorSNAPSHOT.jar -dic=gApi --info
[open the browser to the provider url]

>java -jar cltranslatorSNAPSHOT.jar --help
[to print help]

>java -jar cltranslatorSNAPSHOT.jar --dic=gApi --oriLang=it --targetLang=en "ciao amico"
hello friend

>java -jar cltranslatorSNAPSHOT.jar --dic=gDic --oriLang=it --targetLang=en ciao
bye-bye!, bye!, so long!, cheerio!, hello!, hi!, hallo!, hullo!,

>java -jar cltranslatorSNAPSHOT.jar --dic=gDic --oriLang=it --targetLang=en ciao
bye-bye!, bye!, so long!, cheerio!, hello!, hi!, hallo!, hullo!,

>java -jar cltranslatorSNAPSHOT.jar --dic=gDic --oriLang=it --targetLang=en --inFile=infile.txt --outFile=outfile.txt
[will take the list of the words from infile and write them in the outfile.txt. it will still use standard output, anyway)


--


adding different sources (for java coders):

create an implementation of org.tonyxzt.language.core.ContentProvider
create an implementation of org.tonyxzt.language.core.ContentFilter

(template project: https://github.com/tonyx/ExternalDictionaryProviderTemplate)

compile producing a .jar

add reference in the Class-path of the Manifest to that jar (can use the manifest task in the googledictionary.xml
ant file)

add reference like:
myApi,com.mypath.myDictionaryImplementation,com.mypath.MyContentFilter
in the conf/providers.txt

then in the command line is available the --dic=myApi option  as follow:

>java -jar cltranslator.jar --dic=myApi --oriLang=it --targetLang=en ciao


-----------------------------------

in the libs there are two implementations:
cldicpluginSNAPSHOT.jar (output of https://github.com/tonyx/googleDictionaryPlugin)
gapipluginSNAPSHOT.jar (output of https://github.com/tonyx/ExternalDictionaryProviderTemplate)


